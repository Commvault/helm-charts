# PVC for log files.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "cv.metadataname" . }}-logs
  namespace: {{(.Values.global).namespace}}
spec:
  accessModes:
    - ReadWriteOnce
  # leave this if condition alone. otherwise it can cause problem on restart if storageclassname is blank
  {{- if or (.Values.storageClass).logs ((.Values.global).storageClass).logs }}
  storageClassName: {{ or (.Values.storageClass).logs ((.Values.global).storageClass).logs }}
  {{- end}}
  resources:
    requests:
      storage: {{ or (.Values.storageClass).logs_size ((.Values.global).storageClass).logs_size "50Gi" }}

---

# PVC for registry and certificates.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "cv.metadataname" . }}-certificates
  namespace: {{(.Values.global).namespace}}
spec:
  accessModes:
    - ReadWriteOnce
  # leave this if condition alone. otherwise it can cause problem on restart if storageclassname is blank
  {{- if or (.Values.storageClass).certificates ((.Values.global).storageClass).certificates }}
  storageClassName: {{ or (.Values.storageClass).certificates ((.Values.global).storageClass).certificates }}
  {{- end}}
  resources:
    requests:
      storage: {{ or (.Values.storageClass).certificates_size ((.Values.global).storageClass).certificates_size "25M" }}

---

# PVC for CS database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "cv.metadataname" . }}-database
  namespace: {{(.Values.global).namespace}}
spec:
  accessModes:
    - ReadWriteOnce
  # leave this if condition alone. otherwise it can cause problem on restart if storageclassname is blank
  {{- if or (.Values.storageClass).csdb ((.Values.global).storageClass).csdb }}
  storageClassName: {{ or (.Values.storageClass).csdb ((.Values.global).storageClass).csdb }}
  {{- end}}
  resources:
    requests:
      storage: {{ or (.Values.storageClass).csdb_size ((.Values.global).storageClass).csdb_size "100Gi" }}

---

# PVC for dr backups
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "cv.metadataname" . }}-drbackups
  namespace: {{(.Values.global).namespace}}
spec:
  accessModes:
    - ReadWriteOnce
  # leave this if condition alone. otherwise it can cause problem on restart if storageclassname is blank
  {{- if or (.Values.storageClass).drbackups ((.Values.global).storageClass).drbackups }}
  storageClassName: {{ or (.Values.storageClass).drbackups ((.Values.global).storageClass).drbackups }}
  {{- end}}
  resources:
    requests:
      storage: {{ or (.Values.storageClass).drbackups_size ((.Values.global).storageClass).drbackups_size "50Gi" }}
