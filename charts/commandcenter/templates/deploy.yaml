{{- if ne .Values.create false -}}
{{- include "cv.utils.validateVersionAndRelease" . }}
{{- $objectname := include "cv.metadataname" . }}
{{- $statefulset := or .Values.statefulset ((.Values).global).statefulset }}

apiVersion: apps/v1 
kind: {{ if $statefulset }}StatefulSet{{ else }}Deployment{{ end }}
metadata:
  name: {{ $objectname }}
  namespace: {{ include "cv.namespace" . }}
  {{- include "cv.deploymentannotations" . }}
  labels:
    app.kubernetes.io/name: {{ $objectname }}
spec:
  {{- include "cv.commondeploymentspecs" . }}
  template:
    metadata:
      name: {{ $objectname }}
      labels:
        app.kubernetes.io/name: {{ $objectname }}
    spec:
      {{- include "cv.imagePullSecret" . }}
      {{- include "cv.additionalPodspecs" . }}
      {{- include "cv.initContainer" . }}
      containers:
      # Command center
      - name: {{ $objectname }} 
        image: {{ include "cv.image" . }}
        {{- include "cv.resources" . }}
        {{- include "cv.additionalContainerspecs" . }}
        envFrom:
        - configMapRef:
           name: {{ include "cv.metadataname2" (list . "cvconfig") }}
           optional: true
        {{- if eq (include "cv.useInitContainer" .) "false" }}
        - secretRef:
           name: {{ include "cv.metadataname2" (list . "cvcreds") }}
           optional: true
        {{- end }}           
        env:              
        {{- include "cv.commonenv" . }}
        - name: CV_WS_CLIENT_NAME 
          # The clientName of the webserver the command center needs to be connected to
          value: {{if .Values.webserverName}}{{tpl .Values.webserverName .}}{{end}}
        # ports can be left default
        ports:
        - containerPort: {{ include "cv.cvfwdport" . }}
        - containerPort: {{ .Values.httpPort | default 80 }}
        - containerPort: {{ .Values.httpsPort | default 443 }}
        volumeMounts:
        # This section contains list of persistent volumes that has to be mounted onto the container.                 
        # This can be left with default settings as mentioned in this template.
        {{- if eq (include "cv.utils.isMinVersion" (list . 11 36)) "true" }}
        - name: cv-storage-certsandlogs
          mountPath: /opt/{{include "cv.utils.getOemPath" .}}/Apache/conf
          subPath: apacheconf
        {{- end }}
        {{- include "cv.commonVolumeMounts" . }}
        {{- include "cv.additionalVolumeMounts" . }}
        {{ include "cv.commonContainerSpecs" . }}

      volumes:
      {{- include "cv.commonVolumes" . }}
      {{- if not $statefulset }}
      {{- include "cv.deployment.volumes" (list . "certsandlogs" "10Gi") }}
      {{- include "cv.deployment.additionalVolumes" . }}
      {{- end }}

  {{- if $statefulset }}
  volumeClaimTemplates:
  {{- include "cv.statefulset.pvctemplate" (list . "certsandlogs" "10Gi") }}
  {{- include "cv.statefulset.additionalPvcTemplates" . }}
  persistentVolumeClaimRetentionPolicy:
    whenScaled: {{ or .Values.whenScaled .Values.global.whenScaled | default "Delete" }}
    whenDeleted: {{ or .Values.whenDeleted .Values.global.whenDeleted | default "Delete" }}
  {{- end }}
{{- end }}
